name: Deploy RAG Backend

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'tests/**'
      - 'pytest.ini'
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.11'

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r backend/requirements.txt -r DataPipeline/requirements.txt pytest

  #   - name: Run tests
  #     run: pytest -q

  build-and-deploy:
    # needs: tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      run: az acr login --name ${{ env.REGISTRY }}

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M)
        docker buildx build --platform linux/amd64 -t ${{ env.REGISTRY }}/az-rag-pipeline:${IMAGE_TAG} .
        docker push ${{ env.REGISTRY }}/az-rag-pipeline:${IMAGE_TAG}
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

    - name: Deploy to Azure Container App
      run: |
        az containerapp update \
          --name ${{ secrets.RAG_PIPELINE_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.REGISTRY }}/az-rag-pipeline:${IMAGE_TAG}
